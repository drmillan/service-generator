//
//  {{message.methodUpperCase}}Task.m
//  {{projectName}}
//  Version: {{version}}
//
//  Created by Service Generator
//

#import "{{message.methodUpperCase}}Task.h"
#import "{{projectName}}Helper.h"
#import "{{message.service}}Logic.h"

@implementation {{message.methodUpperCase}}Task

+ (void) {{message.method}}TaskForRequest:({{message.request.name}} *)request showLoadingView:(BOOL)showLoadingView completed:(void(^)(NSInteger statusCode,{{message.response.name}} *response))completedBlock progress:(void(^) (NSUInteger __unused bytesWritten, long long totalBytesWritten, long long totalBytesExpectedToWrite)) progressBlock error:(void(^)(NSError *error))errorBlock {

	[UIApplication sharedApplication].networkActivityIndicatorVisible = YES;
		
	UIView *loadingView;
	if ([[{{projectName}}Helper sharedInstance] respondsToSelector:@selector(loadingViewForTasks)]  && showLoadingView) {
		loadingView = [[{{projectName}}Helper sharedInstance] loadingViewForTasks];
	}
				
	if (loadingView) {
		UIWindow* window = [UIApplication sharedApplication].keyWindow;
		[window addSubview:loadingView];
	}


	[[{{message.service}}Logic sharedInstance] {{message.method}}:request onSuccess:^(NSInteger statusCode,{{message.response.name}} *response){

		[UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
		if (loadingView) {
			[loadingView removeFromSuperview];
		}
		if(completedBlock){
			completedBlock(statusCode,response);
		}

	} onProgress: progressBlock onError:^(NSError *error){

		[UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
		if (loadingView) {
			[loadingView removeFromSuperview];
		}
		if(errorBlock) {
			errorBlock(error);
		}
	}];

}

+ (void) {{message.method}}TaskForRequest:({{message.request.name}} *)request showLoadingView:(BOOL)showLoadingView completed:(void(^)(NSInteger statusCode,{{message.response.name}} *response))completedBlock error:(void(^)(NSError *error))errorBlock {
	[self {{message.method}}TaskForRequest:request showLoadingView:showLoadingView completed:completedBlock progress:nil error:errorBlock];
}

+ (void) {{message.method}}TaskForRequest:({{message.request.name}} *)request completed:(void(^)(NSInteger statusCode,{{message.response.name}} *response))completedBlock progress:(void(^) (NSUInteger __unused bytesWritten, long long totalBytesWritten, long long totalBytesExpectedToWrite)) progressBlock error:(void(^)(NSError *error))errorBlock {

	[self {{message.method}}TaskForRequest:request showLoadingView:YES completed:completedBlock progress:progressBlock error:errorBlock];
}

+ (void) {{message.method}}TaskForRequest:({{message.request.name}} *)request completed:(void(^)(NSInteger statusCode,{{message.response.name}} *response))completedBlock error:(void(^)(NSError *error))errorBlock {

	[self {{message.method}}TaskForRequest:request showLoadingView:YES completed:completedBlock progress:nil error:errorBlock];
}

@end