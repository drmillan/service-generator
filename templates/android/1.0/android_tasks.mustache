/**
  {{serviceName}}
  {{projectName}}

  Created by Generator
  Copyright (c) 2012 Mobivery. All rights reserved.
  Version: {{version}}
*/
package {{{packagename}}}.tasks.{{{message.serviceNameLower}}};

import {{{packagename}}}.R;
import {{{packagename}}}.model.dto.*; 
import {{{packagename}}}.logic.*;
import android.os.AsyncTask;
import android.app.Activity;
import android.widget.Toast;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

 /**
 * Task de {{{message.method}}}
 * @author DRM
 *
 */
public class {{{message.methodUpperCase}}}Task extends AsyncTask<{{{message.request.name}}},Integer, {{{message.response.name}}}> implements com.mobivery.logic.ServiceExceptionListener {

	// Instancia local de la activity que crea la tarea
	private Activity activity;
	private int loadingView;
	private int progressText;
	private View innerView;
	private LinearLayout loadingLayout;
	private TextView txtView;
	private int loadingText;
	
	public {{{message.methodUpperCase}}}Task(Activity activity,int loadingView,int progressText, int loadingText)
	{
		this.activity=activity;
		this.loadingView=loadingView;
		this.progressText=progressText;
		this.loadingText=loadingText;
	}
	public void execute({{{message.request.name}}} request)
	{
		if(loadingView!=-1)
		{
			activity.runOnUiThread(new Thread(new Runnable(){public void run(){initSpinner();}}));
		}
		super.execute(request);
	}
	private void initSpinner()
	{
		ViewGroup group=(ViewGroup)activity.getWindow().getDecorView().getRootView();
		loadingLayout=new LinearLayout(activity);
		innerView=activity.getLayoutInflater().inflate(loadingView, loadingLayout);
		LayoutParams viewParams=new LayoutParams(LayoutParams.FILL_PARENT,LayoutParams.FILL_PARENT);
		innerView.setLayoutParams(viewParams);
		TextView loadingTextView = (TextView)innerView.findViewById(progressText);
		if(loadingTextView != null){
			loadingTextView.setText(this.loadingText);
		}
		innerView.bringToFront();
		LayoutParams params=new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT);
		loadingLayout.setLayoutParams(params);
		group.addView(loadingLayout);
		loadingLayout.bringToFront();
		
	}
	private void endSpinner()
	{
		if(loadingLayout!=null)
		{
			ViewGroup group=(ViewGroup)activity.getWindow().getDecorView().getRootView();
			if(group!=null)
			{
			group.removeView(loadingLayout);
			}
		}		
	}
	public void updateProgress(final String progress)
	{
	activity.runOnUiThread(new Runnable(){public void run(){
		if(txtView==null)
		{
			txtView=(TextView)innerView.findViewById(progressText);
		}
		if(txtView!=null)
		{
			txtView.setText(progress);
		}}});
	}
	
	public {{{message.methodUpperCase}}}Task(Activity activity)
	{
		this(activity,-1,-1,-1);
	}
	@Override
	public final {{{message.response.name}}} doInBackground({{{message.request.name}}}... params) {
		// Obtenemos el dto de petición
		{{{message.request.name}}} request=params[0];
		{{{message.response.name}}} response=null;
		try
		{
{{#preMethod}}
		{{{preMethod}}}(request);
{{/preMethod}}	
			// Llamamos al servicio
			response=execOnBackground(request);
{{#onTask}}
			if (activity==null) {
				throw new com.mobivery.logic.ServiceException(new Exception("Activity to go back to already removed from memory"));
			} else {
				activity.runOnUiThread(new Runnable(){public void run(){
					{{{onTask}}}({{{message.methodUpperCase}}}Task.this,{{{message.methodUpperCase}}}Task.this.activity);}});
			}
{{/onTask}}
		}
		catch(final com.mobivery.logic.ServiceException ex)
		{
			// Log.d(getClass().getName(), ex.getMessage());
			if(!isCancelled())
			{
			// Si se produce una excepción , llamamos a onServiceError en otro hilo.
			if (activity!=null) {
				activity.runOnUiThread(new Runnable(){public void run(){
					{{{message.methodUpperCase}}}Task.this.onServiceError(ex);}});
			}
			return null;
			}
		}
		if(loadingView!=-1)
		{
			if(activity!=null)
			{
			activity.runOnUiThread(new Runnable(){public void run(){endSpinner();}});
			}
		}
		return response;
	}
	public void onServiceError(com.mobivery.logic.ServiceException ex)
	{
		if(!isCancelled() && activity!=null && ex!=null)
		{
			// Toast.makeText(activity, ex.getMessage(),Toast.LENGTH_LONG).show();
			ex.printStackTrace();
		}
		if(loadingView!=-1)
		{
			if(activity!=null)
			{
				activity.runOnUiThread(new Runnable(){public void run(){endSpinner();}});
			}
		}
	}
	public {{{message.response.name}}} execOnBackground({{{message.request.name}}} request) throws com.mobivery.logic.ServiceException
	{
		return {{{message.service}}}Logic.getInstance().{{{message.method}}}(request);
	}
}
