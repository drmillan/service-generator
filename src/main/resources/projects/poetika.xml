<protocol onSend="com.poetika.PoetikaApplication.onSend" onReceive="com.poetika.PoetikaApplication.onReceive" onError="com.poetika.PoetikaApplication.onError" onTask="com.poetika.PoetikaApplication.onTaskFinished">
	<messages>
		<!-- ###################################### WEATHER ###################################### -->
		<message name="Weather" service="Weather" method="forecast" description="Forecast" type="Get">
			<urlPattern>
				<url address="http://api.wunderground.com/api/bd7fc2562721ad57/conditions/lang:SP/q/${latitude},${longitude}.json" />
			</urlPattern>
			<request type="LocationRequestDTO">
				<field name="latitude" type="double" description="latitud" />
				<field name="longitude" type="double" description="longitud" />
			</request>
			<response type="WeatherResponseDTO">
				<field name="current_observation" type="WeatherObservationDTO" description="observation"/>
				<field name="response" type="WeatherResponseItemDTO" description="respuesta"/>
			</response>
		</message>
		<!-- ###################################### MOON ######################################### -->
		<message name="Astronomy" service="Astronomy" method="astronomy" description="Astronomy" type="Get">
		    <urlPattern>
		        <url address="http://api.wunderground.com/api/bd7fc2562721ad57/astronomy/q/${latitude},${longitude}.json"/>
		    </urlPattern>
		    <request type="LocationRequestDTO">
		    	<field name="latitude" type="double" description="latitud" />
				<field name="longitude" type="double" description="longitud" />    
		    </request>
		    <response type="AstronomyResponseDTO">
		        <field name="response" type="AstronomyResponseItemDTO"/>
		        <field name="moon_phase" type="MoonPhaseDTO"/>
		    </response>
		</message>
		<!-- ###################################### POETIKA ###################################### -->
		<message name="SelectorPoems" service="Poem" method="selectorPoems" description="" type="Get">
		    <urlPattern>
		        <url address="${serverURL}/poems/selector_poems.json?theme=${theme}&amp;emotion=${emotion}&amp;lenght=${length}"/>
		    </urlPattern>
		    <request type="SelectorPoemRequestDTO">
		        <field name="theme" type="string" description="Tema"/>
		        <field name="emotion" type="string" description="Emocion"/>
		        <field name="length" type="int" description="Longitud"/>		              
		    </request> 
		    <response type="SelectorPoemResponseDTO">
		        <field name="author_poems" type="PoemDetailsDTO*"/>
		        <field name="user_poems" type="PoemDetailsDTO*"/>
		    </response>
		</message>
		<message name="EnvironmentPoem" service="Poem" method="environmentPoems" description="" type="Get">
		    <urlPattern>
		        <url address="${serverURL}/poems/environment_poems.json?places=${places}&amp;weather=${weather}&amp;moonPhase=${moonPhase}&amp;date=${date}&amp;latitude=${latitude}&amp;longitude=${longitude}"/>
		    </urlPattern>
		    <request type="EnvironmentPoemRequestDTO">
		        <field name="places" type="string" description="Secuencia de lugares"/>
		        <field name="weather" type="string" description="Clima"/>
		        <field name="moonPhase" type="string" description="Fase lunar"/>
		        <field name="date" type="string" description="Fecha actual"/>
		        <field name="latitude" type="string" description="latitud"/>
		        <field name="longitude" type="string" description="latitud"/>
		        <field name="v" type="string" description="version"/>		      
		    </request> 
		    <response type="EnvironmentPoemResponseDTO">
		        <field name="author_poems" type="PoemDetailsDTO*"/>
		        <field name="user_poems" type="PoemDetailsDTO*"/>
		    </response>
		</message>
		<message name="Period" service="Poem" method="period" description="" type="Get">
		    <urlPattern>
		        <url address="${serverURL}/poems/period.json?date=${date}&amp;latitude=${latitude}"/>
		    </urlPattern>
		    <request type="PeriodRequedtDTO">
		        <field name="date" type="string" description="Date"/>
		        <field name="latitude" type="string" description="Latitud"/>
		        <field name="version" type="string" description="Version"/>
		    </request>
		    <response type="PeriodResponseDTO">
		        <field name="period" type="PeriodDetailsDTO" description="detalles del periodo"/>
		    </response>
		</message>
		<message name="UserLogin" service="User" method="userLogin" description="" type="PostJSON">
		    <urlPattern>
		        <url address="${serverURL}/sessions"/>
		    </urlPattern>
		    <request type="LoginRequestDTO" style="JSON">		   
		        <field name="login" type="string" description="Login de usuario"/>
		        <field name="password" type="string" description="Clave de usuario"/>
		    </request>
		    <response type="LoginResponseDTO">
		        <field name="status" type="string"/>
		        <field name="errorMessage" type="string"/>
		        <field name="token" type="string"/>
		        <field name="favoriteIds" type="int*"/>
		    </response>
		</message>
		<message name="UserLogout" service="User" method="userLogout" description="" type="Delete">
		    <urlPattern>
		        <url address="${serverURL}/sessions/destroy"/>
		    </urlPattern>
		    <request type="LogoutRequestDTO" style="JSON">
		        <field name="token" type="string" description="token"/>
		    </request>
		    <response type="LogoutResponseDTO">
		        <field name="status" type="string"/>
		        <field name="errorMessage" type="string"/>
		        <field name="token" type="string"/>
		    </response>
		</message>
		<message name="UserRegister" service="User" method="userRegister" description="" type="PostJSON">
		    <urlPattern>
		        <url address="${serverURL}/users"/>
		    </urlPattern>
		    <request type="RegisterRequestDTO" style="JSON">
		        <field name="user" type="UserDTO"/>
		    </request>
		    <response type="RegisterResponseDTO">
		        <field name="status" type="string"/>
		        <field name="errorMessage" type="string"/>
		        <field name="token" type="string"/>
		    </response>
		</message>
		<message name="Themes" service="Theme" method="getThemes" description="" type="Get">
		    <urlPattern>
		        <url address="${serverURL}/poems/themes.json?locale=${locale}"/>
		    </urlPattern>
		    <request type="ThemeListRequestDTO">
		        <field name="locale" type="string"/>		    
		    </request>
		    <response type="ThemeListResponseDTO">
		        <field name="themes" type="ThemeDTO*"/>		    		     
		    </response>
		</message>
		<message name="Emotions" service="Emotion" method="getEmotions" description="" type="Get">
		    <urlPattern>
		        <url address="${serverURL}/poems/emotions.json?locale=${locale}"/>
		    </urlPattern>
		    <request type="EmotionListRequestDTO">
		        <field name="locale" type="string"/>		    
		    </request>
		    <response type="EmotionListResponseDTO">
		        <field name="emotions" type="EmotionDTO*"/>		    		     
		    </response>
		</message>
		<message name="MarkInnapropiate" service="Poem" method="markInnapropiate" type="PostJSON">
		    <urlPattern>
		        <url address="${serverURL}/poems/denounce.json"/>
		    </urlPattern>
		    <request type="MarkInnapropiateRequestDTO">
		        <field name="id" type="int"/>
		        <field name="reason" type="int"/>
		        <field name="reasonDetails" type="string"/>
		        <field name="token" type="string"/>
		    </request>
		    <response type="MarkInnapropiateResponseDTO">
		        <field name="status" type="string"/>
		        <field name="errorMessage" type="string"/>
		    </response>
		</message>
		<message name="SelectableData" service="SelectableData" method="getSelectableData" description="Obtener los datos para rellenar los nuevos poemas" type="Get">
		    <urlPattern>
		        <url address="${serverURL}/poems/selectable_data.json?locale=${locale}"/>
		    </urlPattern>
		    <request type="SelectableDataRequestDTO">
		        <field name="locale" type="string"/>		    
		    </request>
		    <response type="SelectableDataResponseDTO">
		        <field name="moments" type="ValueDescriptionDTO*"/>
		        <field name="seasons" type="ValueDescriptionDTO*"/>
		      	<field name="periods" type="ValueDescriptionDTO*"/>
		        <field name="weathers" type="ValueDescriptionDTO*"/>
		        <field name="astronomies" type="ValueDescriptionDTO*"/>
		        <field name="themes" type="ValueDescriptionDTO*"/>
		        <field name="emotions" type="ValueDescriptionDTO*"/>
		        <field name="places" type="ValueDescriptionDTO*"/>
			</response>
		</message>		
		<message name="FavoritesById" service="Favorites" method="getFavoritesById" type="PostJSON">
		    <urlPattern>
		        <url address="${serverURL}/poems/poems_by_id.json"/>
		    </urlPattern>
		    <request type="GetFavoritesByIdRequestDTO">
		        <field name="favoriteIds" type="int*"/>
		    </request>
		    <response type="GetFavoritesByIdResponseDTO">
		         <field name="poems" type="PoemGroupDTO" description="grupo de poemas (author,user,ads)"/>
		    </response>
		</message>
		<message name="CreatePoem" service="Poem" method="createPoem" type="PostJSON">
		    <urlPattern>
		        <url address="${serverURL}/poems"/>
		    </urlPattern>
		    <request type="CreatePoemRequestDTO">
		        <field name="token" type="string"/>
		        <field name="poem" type="PoemRawDTO"/>
		    </request>
		    <response type="CreatePoemResponseDTO">
		        <field name="poem_id" type="int"/>
		        <field name="status" type="string"/>
		    </response>
		</message>
		<message name="EditPoem" service="Poem" method="editPoem" type="PutJSON">
		    <urlPattern>
		        <url address="${serverURL}/poems/${poemId}"/>
		    </urlPattern>
		    <request type="EditPoemRequestDTO">
		        <field name="token" type="string"/>
		        <field name="poem" type="PoemRawDTO"/>
		        <field name="poemId" type="int"/>
		    </request>
		    <response type="EditPoemResponseDTO">
		        <field name="poem_id" type="int"/>
		        <field name="status" type="string"/>
		    </response>
		</message>
			<message name="UserPoems" service="Poem" method="myPoems" type="PostJSON">
		    <urlPattern>
		        <url address="${serverURL}/poems/my_poems"/>
		    </urlPattern>
		    <request type="UserPoemsRequestDTO">
		        <field name="token" type="string"/>
		    </request>
		    <response type="UserPoemsResponseDTO">
		        <field name="poems" type="PoemRawDTO*"/>
		        <field name="status" type="string"/>
		    </response>
		</message>
		<message name="UpdateBannerClick" service="Poem" method="updateBannerClick" type="PostJSON">
		    <urlPattern>
		        <url address="${serverURL}/banners/visit"/>
		    </urlPattern>
		    <request type="UpdateBannerClickRequestDTO">
		        <field name="id" type="int"/>
		    </request>
		    <response type="UpdateBannerClickResponseDTO">
		        <field name="status" type="string"/>
		    </response>
		</message>
		<message name="AddToFavorites" service="Favorites" method="addToFavorites" type="PostJSON">
		    <urlPattern>
		        <url address="${serverURL}/users/add_favorite.json"/>
		    </urlPattern>
		    <request type="AddToFavoritesRequestDTO">
		        <field name="token" type="string"/>
		        <field name="poem_id" type="int"/>
		    </request>
		    <response type="AddToFavoritesResponseDTO">
		        <field name="status" type="string"/>
		        <field name="errorMessage" type="string"/>
		        <field name="favoriteIds" type="int*"/>
		    </response>
		</message>
		<message name="DeleteFavorite" service="Favorites" method="deleteFavorite" type="PostJSON">
		    <urlPattern>
		        <url address="${serverURL}/users/delete_favorite.json"/>
		    </urlPattern>
		    <request type="DeleteFavoriteRequestDTO">
		        <field name="token" type="string"/>
		        <field name="poem_id" type="int"/>
		    </request>
		    <response type="DeleteFavoriteResponseDTO">
		        <field name="status" type="string"/>
		        <field name="errorMessage" type="string"/>
		        <field name="favoriteIds" type="int*"/>
		    </response>
		</message>
		<message name="GetFavorites" service="Favorites" method="getFavorites" type="Get">
		    <urlPattern>
		        <url address="${serverURL}/users/get_favorites.json?token=${token}"/>
		    </urlPattern>
		    <request type="GetFavoritesRequestDTO">
		        <field name="token" type="string"/>
		    </request>
		    <response type="GetFavoritesResponseDTO">
		        <field name="poems" type="PoemGroupDTO" description="grupo de poemas (author,user,ads)"/>		        
		    </response>
		</message>
	</messages>
	<types>
	    <type type="PoemGroupDTO">
	        <field name="author_poems" type="PoemContainerDTO*"/>
	        <field name="user_poems" type="PoemContainerDTO*"/>
	        <field name="ad_poems" type="PoemContainerDTO*"/>
	    </type>
	    <type type="PoemContainerDTO">
	        <field name="poem" type="PoemDetailsDTO"/>
	    </type>
	    <type type="PoemDetailsDTO">
	        <field name="id" type="int"/>
	        <field name="title" type="string"/>
	        <field name="text" type="string"/>
	        <field name="brand" type="string"/>
	        <field name="image" type="string"/>
	        <field name="author" type="string"/>
	        <field name="country" type="string"/>
	        <field name="year" type="int"/>
	        <field name="url" type="string"/>
	        <field name="type" type="string"/>
	        <field name="numFavs" type="int" />
	        <field name="traductor" type="string" />
	        <field name="editorial" type="string" />  	        	        
	    </type>
	    <type type="PeriodDetailsDTO">
	        <field name="name" type="string"/>
	    </type>
	    <type type="WeatherObservationDTO">
	        <field name="icon" type="string" description="icon"/>
	        <field name="temp_c" type="float" description="temperatura"/>
	        <field name="weather" type="string" description="clima"/>
	    </type>
	    <type type="WeatherImageDTO">
	        <field name="url" type="string" description="url de la imagen"/>
	        <field name="title" type="string" description="titulo"/>
	        <field name="link" type="string" description="enlace"/>
	    </type>
	    <type type="WeatherResponseItemDTO">
	        <field name="version" type="string" description="Version"/>
	        <field name="termsofService" type="string" description="Terms of service"/>
	        <field name="features" type="WeatherResponseFeaturesDTO" description="Terms of service"/>
	    </type>
	    <type type="WeatherResponseFeaturesDTO">
	        <field name="conditions" type="int" description="Conditions"/>
	    </type>
	    <type type="AstronomyResponseItemDTO">
	        <field name="version" type="string" description="Version"/>
	        <field name="termsofService" type="string" description="Terms of service"/>
	        <field name="features" type="WeatherResponseFeaturesDTO" description="Terms of service"/>
	    </type>
	    <type type="AstronomyResponseFeaturesDTO">
	        <field name="astronomy" type="int" description="Astronomy"/>
	    </type>
	    <type type="MoonPhaseDTO">
	        <field name="percentIlluminated" type="int"/>
	        <field name="ageOfMoon" type="int"/>
	        <field name="current_time" type="MoonTimeDTO"/>
	        <field name="sunrise" type="MoonTimeDTO"/>
	        <field name="sunset" type="MoonTimeDTO"/>
	    </type>
	    <type type="MoonTimeDTO">
	        <field name="hour" type="int"/>
	        <field name="minute" type="int"/>
	    </type>
	    <type type="ThemeDTO">
	        <field name="theme" type="string"/>
	        <field name="localized_theme" type="string"/>
	        <field name="color" type="ColorDTO"/>	        
	    </type>
	    <type type="ColorDTO">
	        <field name="red" type="int"/>
	        <field name="green" type="int"/>
	        <field name="blue" type="int"/>
	    </type>
	    <type type="EmotionDTO">
	        <field name="emotion" type="string"/>
	        <field name="localized_emotion" type="string"/>
	        <field name="brightness" type="double"/>	        
	    </type>
	    <type type="ErrorDTO">
	        <field name="login" type="string*"/>
	    </type>
	    <type type="UserDTO">
	        <field name="login" type="string" description="Login de usuario"/>
	        <field name="email" type="string" description="Email del usuario"/>
		    <field name="password" type="string" description="Clave de usuario"/>
	    </type>
	    <type type="ValueDescriptionDTO">
	        <field name="value" type="string" description="Valor de la clave"/>
		    <field name="description" type="string" description="Descripcion de la clave"/>
	    </type>	    
	    <type type="PoemRawDTO">
	        <field name="id" type="int" description="identificador unico del poema"/>	        
	        <field name="title" type="string" description="Titulo"/>
	        <field name="text" type="string" description="Texto"/>
	        <field name="original_text" type="string" description="Texto sin formato"/>
	        <field name="origin_country" type="string" description="Pais de origen"/>
	        <field name="origin_year" type="int" description="Anyo de origen"/>	        
	        <field name="author_name" type="string" description=""/>
	        <field name="author_surname" type="string" description=""/>
	        <field name="time_of_day" type="string" description="Momento del dia"/>
   	        <field name="season" type="string" description="Estacion"/>
	        <field name="time_period" type="string" description="Epoca"/>	        
	        <field name="weather_id" type="int" description="ID del tiempo"/>
	        <field name="astronomy_id" type="int" description="ID de la astronomia"/>
	        <field name="latitude" type="string" description="Latitud"/>
	        <field name="longitude" type="string" description="Longitud"/>	      
	        <field name="numFavs" type="int" />
	        <field name="traductor" type="string" />
	        <field name="editorial" type="string" />  
	        <!-- OJO!! con este campo sites, no existe en el modelo de datos de poema por lo que siempre hay que quitarlo en el CMS por codigo -->
	        <field name="sites" type="string" description="Campo compuesto que contiene los lugares de google places."/>
		    <field name="passion" type="string"/>
		    <field name="happiness" type="string"/>
		    <field name="seduction_sex" type="string"/>
		    <field name="serenity" type="string"/>
		    <field name="homesickness" type="string"/>
		    <field name="weariness" type="string"/>
		    <field name="sadness" type="string"/>
		    <field name="hope" type="string"/>
		    <field name="distress" type="string"/>
		    <field name="rage" type="string"/>
		    <field name="guilt" type="string"/>
		    <field name="fear" type="string"/>
		    <field name="joke" type="string"/>
		    <field name="irony" type="string"/>
		    <field name="heroism" type="string"/>
		    <field name="acceptance" type="string"/>
		    <field name="loneliness" type="string"/>
		    <field name="repentance" type="string"/>
		    <field name="love" type="string"/>
		    <field name="family" type="string"/>
		    <field name="life" type="string"/>
		    <field name="art" type="string"/>
		    <field name="death" type="string"/>
		    <field name="aging" type="string"/>
		    <field name="youth" type="string"/>
		    <field name="nature" type="string"/>
		    <field name="friendship" type="string"/>
		    <field name="trip" type="string"/>
		    <field name="faith_god" type="string"/>
		    <field name="fight" type="string"/>
		    <field name="drunkenness" type="string"/>
		    <field name="lullaby" type="string"/>
		    <field name="music" type="string"/>
	        <field name="animals" type="string"/>
		    <field name="carpe_diem" type="string"/>
		    <field name="sea" type="string"/>	        
	    </type>
	</types>
</protocol>